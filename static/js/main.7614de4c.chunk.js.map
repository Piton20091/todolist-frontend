{"version":3,"sources":["frontend/components/Modal/index.js","frontend/components/Button/index.js","frontend/utils/validate/index.js","frontend/components/forms/formControl.js","frontend/components/forms/CreateTodoForm.js","frontend/components/FrontSideHeader/index.js","frontend/components/Icon/index.js","frontend/components/Todo/index.js","frontend/components/Loader/index.js","frontend/components/TodoLists/index.js","frontend/components/FrontSideCard/index.js","frontend/utils/api/todoLists.js","frontend/utils/api/tasks.js","frontend/modules/types.js","frontend/modules/actions.js","frontend/modules/selectors.js","frontend/modules/FrontSideCard/container.js","frontend/components/forms/SearchForm.js","frontend/components/Search/index.js","frontend/components/Filter/index.js","frontend/components/forms/EditTodoTitleForm.js","frontend/components/forms/CreateTaskForm.js","frontend/components/AddTask/index.js","frontend/components/BackSideHeader/index.js","frontend/components/CheckboxCustom/index.js","frontend/components/forms/EditTaskTitleForm.js","frontend/components/Task/index.js","frontend/components/Tasks/index.js","frontend/components/BackSideCard/index.js","frontend/modules/BackSideCard/container.js","frontend/components/Chips/Chip.js","frontend/components/Chips/index.js","frontend/components/Chips/Chips.js","frontend/components/App/index.js","frontend/modules/reducer.js","reducers.js","store.js","frontend/modules/App/container.js","index.js"],"names":["children","title","onClick","setIsOpenModal","e","target","currentTarget","Button","type","className","classes","ClassNames","required","value","undefined","FieldControl","touched","error","isError","Input","input","meta","properties","reduxForm","form","handleSubmit","FrontSideHeader","sumLists","createTodoList","getDateTime","moment","format","useState","dateTime","setDateTime","isOpenModal","setInterval","todoTitle","Icon","props","createdAt","tasks","_id","removeTodoList","getTasks","length","id","stopPropagation","onRemoveTodo","TodoLists","todoLists","map","todo","FrontSideCard","funcs","instance","axios","baseURL","get","res","data","todoId","delete","post","put","console","log","taskId","SEARCH","FILTER","chipsControl","dispatch","headerChip","chip","setTimeout","chipId","Actions","fetchTodoLists","todoListsApi","then","uniqId","catch","err","JSON","parse","stringify","message","name","a","async","status","todoList","editTodoList","isActiveCardSide","createTask","tasksApi","newTask","removeTask","editTask","editTaskData","changeActiveCardSide","searchTasks","searchString","handleFilters","filter","removeChip","getIsActiveCardSide","state","getChips","chips","getTodoLists","getActiveTasks","activeTasks","getActiveList","activeList","getTodoTitle","getFilter","connect","useEffect","change","onBlur","Search","setIsActiveSearch","isActiveInputSearch","setIsActiveInputSearch","isActiveIconSearch","setIsActiveIconSearch","searchValue","setSearchValue","CSSTransition","in","classNames","onEnter","onExited","window","innerWidth","mountOnEnter","unmountOnExit","timeout","onChange","search","initialValues","Filter","onHandleFilters","setActiveBtn","document","querySelectorAll","forEach","btn","classList","remove","add","classNameFilter","setIsEditMode","setIsHideTitleTodo","isEditMode","isShowButton","setIsShowButton","taskTitle","setTaskTitle","BackSideHeader","isHideTitleTodo","setIsShowButtonEdit","onSubmit","AddTask","checked","Task","done","important","CheckboxCustom","Tasks","task","BackSideCard","isActiveSearch","tsk","Chip","Chips","App","initialState","combineReducers","action","td","tds","tdl","todoActive","toLowerCase","indexOf","formReducer","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","reducers","AppContainer","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.7614de4c.chunk.js","sourcesContent":["import React from \"react\";\rimport './modal.scss';\r\rexport default ( {children, title, onClick} ) => {\r\r\tconst setIsOpenModal = e => {\r\t\tif (e.target === e.currentTarget) onClick(false);\r\t};\r\r\treturn (\r\t\t<div className=\"modal\" onClick={ ( e ) => setIsOpenModal(e) }>\r\t\t\t<div className=\"modal-wrapper\">\r\t\t\t\t\t<span className=\"modal-close icon icon-close\"\r\t\t\t\t\t\t  onClick={ ( e ) => setIsOpenModal(e) }><></></span>\r\t\t\t\t<div className=\"modal-body\">\r\t\t\t\t\t<div className=\"modal-header\">\r\t\t\t\t\t\t<h1>{ title }</h1>\r\t\t\t\t\t</div>\r\t\t\t\t\t<div className=\"modal-content\">\r\t\t\t\t\t\t{ children }\r\t\t\t\t\t</div>\r\t\t\t\t</div>\r\t\t\t</div>\r\t\t</div>\r\t)\r}\r","import React from \"react\";\rimport ClassNames from \"classnames\";\r\rimport './button.scss';\r\rexport const Button = ({children, type, className, onClick}) => {\r    const classes = ClassNames('btn', className);\r\r    return <button className={classes} onClick={onClick} type={type}>{children}</button>\r};","export const required = value => {\r\n    return (value || typeof value === 'number' ? undefined : 'Обязательное поле!');\r\n};\r\n\r\nexport const maxLength = max => value => {\r\n    return value && value.length > max\r\n        ? `Must be ${max} characters or less`\r\n        : undefined;\r\n};\r\n\r\nexport const minLength = min => value => {\r\n    return value && value.length < min\r\n        ? `Must be ${min} characters or more`\r\n        : undefined;\r\n};\r\n\r\n","import React from \"react\";\rimport ClassNames from 'classnames';\r\rconst FieldControl = ( {children, touched, error} ) => {\r\tconst isError = touched && error;\r\r\treturn (\r\t\t<div className={ ClassNames(\"wrap-field\", {\"error\": isError}) }>\r\t\t\t{ children }\r\t\t\t{ isError && <label className=\"error-label\">{ error }</label> }\r\t\t</div>\r\t)\r};\r\r\rexport const Input = ( {input, meta, type, ...properties} ) => {\r\r\treturn (\r\t\t<FieldControl { ...meta }>\r\t\t\t<input { ...input } type={ type } { ...properties }/>\r\t\t</FieldControl>\r\t)\r};","import React from \"react\";\rimport { Field, reduxForm } from 'redux-form';\rimport { Button } from \"../Button\";\rimport { required } from \"../../utils/validate\";\rimport { Input } from \"./formControl\";\r\rlet CreateTodoForm = ( {handleSubmit} ) => {\r\r\treturn (\r\t\t<form onSubmit={ handleSubmit } className=\"form form-add-todo\">\r\t\t\t<Field name=\"todoTitle\" type=\"text\" component={Input}\r\t\t\t\t   validate={[required]}\r\t\t\t\t   autoFocus={ true } placeholder=\"Введите имя списка дел\"/>\r\t\t\t<Button type=\"submit\">Добавить</Button>\r\t\t</form>\r\t)\r};\r\rexport default reduxForm({\r\tform: 'addTodoForm'\r})(CreateTodoForm);\r","import React, { useState } from \"react\";\rimport Modal from '../Modal';\rimport moment from 'moment';\rimport CreateTodoForm  from \"../forms/CreateTodoForm\";\rimport { CSSTransition } from \"react-transition-group\";\r\rexport const FrontSideHeader = ( {sumLists, createTodoList} ) => {\r\tconst getDateTime = () => moment().format(\"DD.MM.YYYY HH:mm:ss\");\r\tconst [dateTime, setDateTime] = useState(getDateTime);\r\tconst [isOpenModal, setIsOpenModal] = useState(false);\r\r\tsetInterval(() => setDateTime(getDateTime), 1000);\r\r\tconst submit = ({todoTitle}) => {\r\t\tcreateTodoList({title: todoTitle});\r\t\tsetIsOpenModal(false);\r\t};\r\r\r\treturn (\r\t\t<div className=\"todos-front__header\">\r\t\t\t<div className=\"todos-front__header_position_right\">\r\t\t\t\t<CSSTransition in={isOpenModal} timeout={700} mountOnEnter unmountOnExit classNames={\"modal-animate\"}>\r\t\t\t\t\t<Modal title=\"Добавление списка дел\" onClick={setIsOpenModal}>\r\t\t\t\t\t\t<CreateTodoForm onSubmit={submit}/>\r\t\t\t\t\t</Modal>\r\t\t\t\t</CSSTransition>\r\t\t\t\t<span onClick={ () => setIsOpenModal(true) }\r\t\t\t\t\t  className=\"icon icon-plus\"><></></span>\r\t\t\t</div>\r\t\t\t<div className=\"todos-front__header_position_left\">\r\t\t\t\t<div className=\"todos-time\">{ dateTime }</div>\r\t\t\t\t<div className=\"todos-description\">Всего списков дел<strong>{ ` ${ sumLists }` }</strong></div>\r\t\t\t</div>\r\t\t</div>\r\t)\r};","import React from \"react\";\rimport ClassNames from \"classnames\";\rimport './icon.scss';\r\rconst Icon = ({onClick, className = ''}) => {\r\tconst classes = ClassNames(\r\t\t\"icon\",\r\t\tclassName\r\t);\r\r\treturn (\r\t\t<span className={classes} onClick={onClick}><></></span>\r\t)\r};\r\rexport default Icon;","import React from \"react\";\rimport moment from \"moment\";\rimport Icon from \"../Icon\";\r\rimport './todo.scss';\r\rexport default ( props ) => {\r\tconst {createdAt, tasks, title, _id, removeTodoList, getTasks} = props;\r\r\tconst onRemoveTodo = (e, id) => {\r\t\te.stopPropagation();\r\t\tremoveTodoList(id, title);\r\t};\r\r\treturn (\r\t\t<div className=\"todos-list__item\" onClick={ () => getTasks(_id, title) }>\r\t\t\t<div className=\"todos-list__item-content\">\r\t\t\t\t<span className=\"todo-title\">{ title }</span>\r\t\t\t\t<div className=\"todos-list__item-info\">\r\t\t\t\t\t<span>{ `Создан ${ moment(createdAt).format(\"DD.MM.YYYY в HH:mm:ss\") } ` }</span>\r\t\t\t\t\t<span className=\"sum-tasks\">{ `Заданий - ${ tasks.length }` }</span>\r\t\t\t\t</div>\r\t\t\t</div>\r\t\t\t<Icon className=\"icon-close\" onClick={ (e) => onRemoveTodo(e, _id) }/>\r\t\t</div>\r\t)\r};","import React from \"react\";\rimport './loader.scss';\r\rexport default () => {\r\r\treturn (\r\t\t<div className=\"lds-ellipsis\">\r\t\t\t<div></div>\r\t\t\t<div></div>\r\t\t\t<div></div>\r\t\t\t<div></div>\r\t\t</div>\r\t)\r};","import React from \"react\";\rimport Todo from '../Todo';\rimport Loader from \"../Loader\";\rimport { CSSTransition, TransitionGroup } from 'react-transition-group';\rimport ClassNames from 'classnames';\r\rimport './todoLists.scss';\r\rexport const TodoLists = ( {todoLists, getTasks, removeTodoList} ) => {\r\r\treturn (\r\t\t<div className={ ClassNames(\"todos-front__main\", {\"empty-lists\": todoLists && todoLists.length === 0}) }>\r\t\t\t{ todoLists\r\t\t\t\t? todoLists.length === 0\r\t\t\t\t\t? <div className=\"todos-list__item empty-list\">Списки отсутствуют</div>\r\t\t\t\t\t: <TransitionGroup className=\"todos-list\">\r\t\t\t\t\t\t{\r\r\t\t\t\t\t\t\ttodoLists.map(todo => <CSSTransition key={ todo._id }\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t timeout={ 1500 }\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t classNames=\"item\">\r\t\t\t\t\t\t\t\t<Todo { ...todo }\r\t\t\t\t\t\t\t\t\t  key={ todo._id }\r\t\t\t\t\t\t\t\t\t  getTasks={ getTasks }\r\t\t\t\t\t\t\t\t\t  removeTodoList={ removeTodoList }/>\r\t\t\t\t\t\t\t</CSSTransition>)\r\t\t\t\t\t\t}\r\t\t\t\t\t</TransitionGroup>\r\t\t\t\t: <Loader/>\r\t\t\t}\r\t\t</div>\r\t);\r};","import React from \"react\";\rimport { FrontSideHeader } from \"../FrontSideHeader\";\rimport { TodoLists } from \"../TodoLists\";\r\rexport const FrontSideCard = ( props ) => {\r\r\tconst {todoLists, funcs} = props;\r\r\treturn (\r\t\t<div className=\"todos-front\">\r\t\t\t<FrontSideHeader\r\t\t\t\tsumLists={todoLists ? todoLists.length : 0 }\r\t\t\t\tcreateTodoList={funcs.createTodoList}\r\t\t\t/>\r\t\t\t<TodoLists\r\t\t\t\ttodoLists={ todoLists }\r\t\t\t\tremoveTodoList={funcs.removeTodoList}\r\t\t\t\tgetTasks={funcs.getTasks}\r\t\t\t/>\r\t\t</div>\r\t)\r};\r\r\r","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://drunik-todolist.herokuapp.com/todolists/'\r\n});\r\n\r\n//https://drunik-test.herokuapp.com/todolists\r\n\r\nexport default {\r\n\tasync fetchTodoLists() {\r\n\t\tlet res = await instance.get();\r\n\t\treturn res.data;\r\n\t},\r\n\tasync removeTodoList(todoId) {\r\n\t\tlet res = await instance.delete(todoId);\r\n\t\treturn res.data;\r\n\t},\r\n\tasync createTodoList(title) {\r\n\t\tlet res = await instance.post(null, title);\r\n\t\treturn res.data;\r\n\t},\r\n\tasync editTodoList(todoId, title) {\r\n\t\tlet res = await instance.put(todoId, {title});\r\n\t\tconsole.log(res);\r\n\t\treturn res.data;\r\n\t}\r\n};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://drunik-todolist.herokuapp.com/tasks/'\r\n});\r\n\r\nexport default {\r\n\tasync createTask( data ) {\r\n\t\tconst res = await instance.post(null, data);\r\n\t\treturn res.data;\r\n\t},\r\n\tasync removeTask( taskId ) {\r\n\t\tconst res = await instance.delete(taskId);\r\n\t\treturn res.data;\r\n\t},\r\n\tasync editTask( taskId, data ) {\r\n\t\tconst res = await instance.put(taskId, data);\r\n\t\treturn res.data;\r\n\t}\r\n};","export const SET_CHIP =\"/TODO/SET-CHIP\";\rexport const REMOVE_CHIP =\"/TODO/REMOVE-CHIP\";\rexport const SET_TODO_LISTS =\"/TODO/SET-TODO-LISTS\";\rexport const ADD_TODO_LIST =\"/TODO/ADD-TODO-LIST\";\rexport const EDIT_TODO_LIST =\"/TODO/EDIT-TODO-LIST\";\rexport const REMOVE_TODO_LIST =\"/TODO/REMOVE-TODO-LIST\";\rexport const GET_TASKS =\"/TODO/GET-TASKS\";\rexport const CHANGE_ACTIVE_CARD_SIDE =\"/TODO/CHANGE-ACTIVE-CARD-SIDE\";\rexport const ADD_TASK =\"/TODO/ADD-TASK\";\rexport const REMOVE_TASK =\"/TODO/REMOVE-TASK\";\rexport const EDIT_TASK =\"/TODO/EDIT-TASK\";\rexport const SEARCH =\"/TODO/SEARCH\";\rexport const FILTER =\"/TODO/FILTER\";","import todoListsApi from '../utils/api/todoLists';\r\nimport tasksApi from '../utils/api/tasks';\r\nimport uniqId from \"uniqid\";\r\nimport {\r\n\tADD_TASK,\r\n\tADD_TODO_LIST, CHANGE_ACTIVE_CARD_SIDE, EDIT_TASK,\r\n\tEDIT_TODO_LIST, FILTER,\r\n\tGET_TASKS,\r\n\tREMOVE_CHIP, REMOVE_TASK,\r\n\tREMOVE_TODO_LIST, SEARCH,\r\n\tSET_CHIP,\r\n\tSET_TODO_LISTS\r\n} from \"./types\";\r\n\r\nconst chipsControl = ( dispatch, type, title, id, headerChip ) => {\r\n\tdispatch({type: SET_CHIP, chip: {type, title, id, headerChip}});\r\n\r\n\tsetTimeout(() => {\r\n\t\tdispatch({type: REMOVE_CHIP, chipId: id});\r\n\t}, 3000);\r\n};\r\n\r\nexport const Actions = {\r\n\tfetchTodoLists: () => dispatch => {\r\n\t\ttodoListsApi.fetchTodoLists().then(todoLists => {\r\n\t\t\tdispatch({type: SET_TODO_LISTS, todoLists});\r\n\t\t\tchipsControl(dispatch, \"success\",\r\n\t\t\t\t\"Списки успешно загружены\", uniqId(), \"Все спсиски\");\r\n\t\t}).catch(err => {\r\n\t\t\terr = JSON.parse(JSON.stringify(err));\r\n\t\t\tchipsControl(dispatch, \"error\", err.message, uniqId(), err.name);\r\n\t\t});\r\n\t},\r\n\tremoveTodoList: ( todoId, title ) => async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst res = await todoListsApi.removeTodoList(todoId);\r\n\t\t\tdispatch({type: REMOVE_TODO_LIST, todoId});\r\n\t\t\tchipsControl(dispatch, \"success\", res.status, uniqId(), title);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t},\r\n\tcreateTodoList: todoTitle => async dispatch => {\r\n\t\tconst todoList = await todoListsApi.createTodoList(todoTitle);\r\n\t\tdispatch({type: ADD_TODO_LIST, todoList});\r\n\t\tchipsControl(dispatch, \"success\", \"Список успешно создан\", uniqId(), todoList.title);\r\n\t},\r\n\teditTodoList: ( todoId, todoTitle ) => async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait todoListsApi.editTodoList(todoId, todoTitle);\r\n\t\t\tdispatch({type: EDIT_TODO_LIST, todoList: {_id: todoId, title: todoTitle}});\r\n\t\t\tchipsControl(dispatch, \"success\", \"Список успешно отредактирован\", uniqId());\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\r\n\t},\r\n\tgetTasks: ( todoId, todoTitle ) => dispatch => {\r\n\t\tdispatch({type: GET_TASKS, todoId, todoTitle});\r\n\t\tdispatch({type: \"CHANGE-ACTIVE-CARD-SIDE\", isActiveCardSide: true});\r\n\t\tchipsControl(dispatch, \"success\",\r\n\t\t\t\"Список заданий успешно загружен\", uniqId(), \"Все задания\");\r\n\t},\r\n\tcreateTask: data  => async dispatch => {\r\n\t\tconst newTask = await tasksApi.createTask(data);\r\n\t\tdispatch({type: ADD_TASK, newTask});\r\n\t\tchipsControl(dispatch, \"success\", \"Задание успешно добавлено\", uniqId(), newTask.title);\r\n\t},\r\n\tremoveTask: ( taskId, title ) => async dispatch => {\r\n\t\tawait tasksApi.removeTask(taskId);\r\n\t\tdispatch({type: REMOVE_TASK, taskId});\r\n\t\tchipsControl(dispatch, \"success\", \"Задание успешно удалено\", uniqId(), title);\r\n\t},\r\n\teditTask: ( taskId, editTaskData ) => async dispatch => {\r\n\t\tawait tasksApi.editTask(taskId, editTaskData);\r\n\t\tdispatch({type: EDIT_TASK, taskId, editTaskData});\r\n\t\tchipsControl(dispatch, \"success\", \"Изменения в задании успешно сохранены\", uniqId());\r\n\t},\r\n\tchangeActiveCardSide: isActiveCardSide => dispatch => {\r\n\t\tdispatch({type: CHANGE_ACTIVE_CARD_SIDE, isActiveCardSide});\r\n\t},\r\n\tsearchTasks: ( todoId, searchString ) => dispatch => dispatch({type: SEARCH, todoId, searchString}),\r\n\thandleFilters: filter => dispatch => dispatch({type: FILTER, filter}),\r\n\tremoveChip: chipId => dispatch => dispatch({type: REMOVE_CHIP, chipId}),\r\n};","//import { createSelector } from 'reselect';\r\rexport const getIsActiveCardSide = state => state.todo.isActiveCardSide;\rexport const getChips = state => state.todo.chips;\rexport const getTodoLists = state => state.todo.todoLists;\rexport const getActiveTasks = state => state.todo.activeTasks;\rexport const getActiveList = state => state.todo.activeList;\rexport const getTodoTitle = state => state.todo.todoTitle;\rexport const getFilter = state => state.todo.filter;\r","import React, { useEffect } from \"react\";\rimport { connect } from 'react-redux';\rimport { FrontSideCard } from '../../components/FrontSideCard';\rimport { Actions } from \"../actions\";\rimport { getActiveTasks, getTodoLists } from \"../selectors\";\r\rconst FrontSideCardContainer = (\r\t{todoLists, fetchTodoLists, removeTodoList, createTodoList, getTasks} ) => {\r\r\tuseEffect(() => fetchTodoLists(), [fetchTodoLists]);\r\r\treturn <FrontSideCard todoLists={ todoLists } funcs={ {removeTodoList, getTasks, createTodoList} }/>\r};\r\rconst mapStateToProps = state => ({\r\ttodoLists: getTodoLists(state),\r\tactiveTasks: getActiveTasks(state)\r});\r\rexport default connect(mapStateToProps, Actions)(FrontSideCardContainer);","import React from \"react\";\rimport { Field, reduxForm } from 'redux-form';\rimport { Input } from \"./formControl\";\rimport ClassNames from \"classnames\";\r\rimport './forms.scss';\r\rlet SearchForm = ( {change, onBlur, className} ) => {\r\r\tconst classes = ClassNames(\r\t\t\"form\",\r\t\t\"form-search\",\r\t\tclassName\r\t);\r\r\treturn (\r\t\t<form className={classes}>\r\t\t\t<Field name=\"search\" component={ Input } type=\"text\" onBlur={ onBlur }\r\t\t\t\t   autoFocus={ true } onChange={ change } placeholder=\"Поиск\"/>\r\t\t</form>\r\t)\r};\r\rexport default reduxForm({\r\tform: 'searchForm'\r})(SearchForm);\r","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport SearchForm from \"../forms/SearchForm\";\r\nimport Icon from \"../Icon\";\r\n\r\nimport './search.scss';\r\n\r\nexport const Search = ( {searchTasks, todoId, setIsActiveSearch} ) => {\r\n\tconst [isActiveInputSearch, setIsActiveInputSearch] = useState(false);\r\n\tconst [isActiveIconSearch, setIsActiveIconSearch] = useState(true);\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\r\n\tconst searchChange = ( {search} ) => {\r\n\t\tsearchTasks(todoId, search);\r\n\t\tsetSearchValue(search);\r\n\t};\r\n\r\n\tconst onExited = () => {\r\n\t\tsetIsActiveIconSearch(true);\r\n\t\twindow.innerWidth < 576 && setIsActiveSearch(false);\r\n\t};\r\n\r\n\tconst onActiveModeSearch = () => {\r\n\t\tsetIsActiveInputSearch(true);\r\n\t\twindow.innerWidth < 576 && setIsActiveSearch(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<CSSTransition in={ isActiveInputSearch } classNames=\"search\"\r\n\t\t\t\t\t\t   onEnter={ () => setIsActiveIconSearch(false) }\r\n\t\t\t\t\t\t   onExited={ onExited }\r\n\t\t\t\t\t\t   mountOnEnter unmountOnExit timeout={ 500 }>\r\n\t\t\t\t<SearchForm onChange={ searchChange } initialValues={ {search: searchValue} }\r\n\t\t\t\t\t\t\tonBlur={ () => setIsActiveInputSearch(false) }/>\r\n\t\t\t</CSSTransition>\r\n\t\t\t{ isActiveIconSearch && <Icon className=\"icon-search\"\r\n\t\t\t\t\t\t\t\t\t\t  onClick={ onActiveModeSearch }/> }\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport ClassNames from \"classnames\";\r\n\r\nimport './filter.scss';\r\n\r\nexport const Filter = ({onHandleFilters, className}) => {\r\n\r\n    const setActiveBtn = (e, filter) => {\r\n        const btns = document.querySelectorAll(\".filter .btn\");\r\n        btns.forEach(btn => btn.classList.remove(\"active\"));\r\n        e.target.classList.add(\"active\");\r\n        onHandleFilters(filter);\r\n    };\r\n\r\n    const classNameFilter = ClassNames(\r\n        \"filter btn-group\",\r\n        {\"hide-filter\": className}\r\n    );\r\n\r\n    return (\r\n        <div className={classNameFilter}>\r\n            <Button className=\"active\" onClick={(e) => setActiveBtn(e, \"all\")}>Все</Button>\r\n            <Button onClick={(e) => setActiveBtn(e,\"active\")}>Активные</Button>\r\n            <Button onClick={(e) => setActiveBtn(e,\"done\")}>Выполненные</Button>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\rimport { Field, reduxForm } from 'redux-form';\rimport { Input } from \"./formControl\";\rimport { required } from \"../../utils/validate\";\rimport Icon from \"../Icon\";\rimport { Button } from \"../Button\";\r\rimport './forms.scss';\r\rlet EditTodoTitleForm = ( {handleSubmit, setIsEditMode, onBlur} ) => {\r\r\treturn (\r\t\t<form onSubmit={ handleSubmit } className=\"form form-todo-title\">\r\t\t\t<Field name=\"todoTitle\" component={ Input } type=\"text\"\r\t\t\t\t   onBlur={ onBlur }\r\t\t\t\t   autoFocus={ true } validate={ [required] }/>\r\t\t\t<Icon className=\"icon icon-floppy-o\" onClick={ handleSubmit } />\r\t\t\t<Icon className=\"icon icon-share-square-o\"\r\t\t\t\t  onClick={ () => setIsEditMode(false) } />\r\t\t\t<Button type=\"submit\" className=\"hide\" />\r\t\t</form>\r\t)\r};\r\rexport default reduxForm({\r\tform: 'editTodoTitleForm'\r})(EditTodoTitleForm);\r","import React from \"react\";\rimport { Field, reduxForm } from 'redux-form';\rimport { Button } from \"../Button\";\rimport { required } from \"../../utils/validate\";\rimport { Input } from \"./formControl\";\r\rlet CreateTaskForm = ( {handleSubmit, onBlur} ) => {\r\r\treturn (\r\t\t<form className=\"form form-add-task\" onSubmit={ handleSubmit }>\r\t\t\t<Field name=\"taskTitle\" type=\"text\" component={Input}\r\t\t\t\t   onBlur={ onBlur }\r\t\t\t\t   validate={ [required] } autoFocus={ true }\r\t\t\t\t   placeholder=\"Введите название дела\"/>\r\t\t\t<Button type=\"submit\" className=\"hide\">Добавить</Button>\r\t\t</form>\r\t)\r};\r\rexport default reduxForm({\r\tform: 'addTaskForm'\r})(CreateTaskForm);\r","import React, { useState } from \"react\";\rimport { CSSTransition } from 'react-transition-group';\rimport CreateTaskForm from \"../forms/CreateTaskForm\";\rimport Icon from \"../Icon\";\r\rimport './addTask.scss';\r\rexport default ( {createTask, todoId, setIsHideTitleTodo } ) => {\r\tconst [isEditMode, setIsEditMode] = useState(false);\r\tconst [isShowButton, setIsShowButton] = useState(true);\r\tconst [taskTitle, setTaskTitle] = useState(\"\");\r\r\tconst submitTask = ( {taskTitle} ) => {\r\t\tsetIsEditMode(false);\r\t\tsetTaskTitle(\"\");\r\t\tcreateTask({title: taskTitle, todoId});\r\t};\r\r\tconst changeNewTask = ({taskTitle}) => {\r\t\tsetTaskTitle(taskTitle);\r\t};\r\r\tconst onIsEditMode = () => {\r\t\tsetIsEditMode(true);\r\t\twindow.innerWidth < 700 && setIsHideTitleTodo(true);\r\t};\r\r\tconst onExited = () => {\r\t\tsetIsShowButton(true);\r\t\twindow.innerWidth < 700 && setIsHideTitleTodo(false);\r\t};\r\r\treturn (\r\t\t<div className=\"add-task\">\r\t\t\t<CSSTransition in={ isEditMode } classNames=\"add-task\"\r\t\t\t\t\t\t   onEnter={ () => setIsShowButton(false) }\r\t\t\t\t\t\t   onExited={ onExited }\r\t\t\t\t\t\t   mountOnEnter unmountOnExit timeout={ 500 }>\r\t\t\t\t<CreateTaskForm onSubmit={ submitTask } initialValues={{taskTitle}}\r\t\t\t\t\t\t\t\tonChange={ changeNewTask }\r\t\t\t\t\t\t\t\tonBlur={() => setIsEditMode(false) }/>\r\t\t\t</CSSTransition>\r\t\t\t{ isShowButton && <Icon className=\"icon-plus\" onClick={ onIsEditMode }/> }\r\t\t</div>\r\t)\r};","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport EditTodoTitleForm from \"../forms/EditTodoTitleForm\";\r\nimport AddTask from '../AddTask';\r\nimport Icon from \"../Icon\";\r\n\r\nimport './backSideHeader.scss';\r\n\r\nexport const BackSideHeader = ( {todoTitle, todoId, createTask, editTodoList, changeActiveCardSide} ) => {\r\n\tconst [isHideTitleTodo, setIsHideTitleTodo] = useState(false);\r\n\tconst [isEditMode, setIsEditMode] = useState(false);\r\n\tconst [isShowButton, setIsShowButtonEdit] = useState(true);\r\n\r\n\tconst submitTodoTitle = ( {todoTitle} ) => {\r\n\t\teditTodoList(todoId, todoTitle);\r\n\t\tsetIsEditMode(false);\r\n\t};\r\n\r\n\tconst changeCard = () => {\r\n\t\tchangeActiveCardSide(false);\r\n\t\tsetIsEditMode(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"todos-back__header\">\r\n\t\t\t<Icon className=\"icon-home\" onClick={ changeCard }/>\r\n\t\t\t{!isHideTitleTodo && <CSSTransition in={ isEditMode } classNames=\"todos-back__header\"\r\n\t\t\t\t\t\t   onEnter={ () => setIsShowButtonEdit(false) }\r\n\t\t\t\t\t\t   onExited={ () => setIsShowButtonEdit(true) }\r\n\t\t\t\t\t\t   mountOnEnter unmountOnExit timeout={ 200 }>\r\n\t\t\t\t<EditTodoTitleForm initialValues={ {todoTitle} }\r\n\t\t\t\t\t\t\t\t   setIsEditMode={ setIsEditMode }\r\n\t\t\t\t\t\t\t\t   onSubmit={ submitTodoTitle }/>\r\n\t\t\t</CSSTransition>}\r\n\t\t\t{ (!isHideTitleTodo && isShowButton) && <div className=\"todos-back__header-title\"\r\n\t\t\t\t\t\t\t\t\t   onClick={ () => setIsEditMode(true) }>\r\n\t\t\t\t<h1>{ todoTitle }</h1>\r\n\t\t\t\t<Icon className='icon icon-pencil'/>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<AddTask createTask={ createTask } todoId={ todoId } setIsHideTitleTodo={ setIsHideTitleTodo }/>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\rimport './checkboxCustom.scss';\r\rexport default ( {id, checked, type, name, onChange} ) => {\r\r\treturn (\r\t\t<div className=\"checkbox-custom\">\r\t\t\t<input type={ type } name={ name } onChange={ onChange }\r\t\t\t\t   id={ id } checked={ checked } className=\"checkbox-custom__input\"/>\r\t\t\t<label htmlFor={ id } className=\"checkbox-custom__label\"><></>\r\t\t\t</label>\r\t\t</div>\r\t)\r}","import React from \"react\";\rimport { Field, reduxForm } from 'redux-form';\rimport { Input } from \"./formControl\";\rimport { required } from \"../../utils/validate\";\rimport { Button } from \"../Button\";\r\rimport './forms.scss';\r\rlet EditTaskTitleForm = ( {handleSubmit, form, onBlur} ) => {\r\r\treturn (\r\t\t<form onSubmit={handleSubmit} className=\"form form-edit-task\">\r\t\t\t<Field name={form} component={Input} type=\"text\"\r\t\t\t\t   onBlur={onBlur}\r\t\t\t\t   autoFocus={true} validate={[required]}/>\r\t\t\t<Button type=\"submit\" className=\"hide\">Сохранить</Button>\r\t\t</form>\r\t)\r};\r\rexport default reduxForm(\r({id}) => ({\r\tform: id\r})\r)(EditTaskTitleForm);\r","import React, { useState } from \"react\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ClassNames from 'classnames';\r\nimport CheckboxCustom from \"../CheckboxCustom\";\r\nimport EditTaskTitleForm from \"../forms/EditTaskTitleForm\";\r\nimport Icon from \"../Icon\";\r\n\r\nimport './task.scss';\r\n\r\nexport const Task = ( {_id, title, done, important, removeTask, editTask} ) => {\r\n\tconst [isEditMode, setIsEditMode] = useState(false);\r\n\tconst [isShowButton, setIsShowButton] = useState(true);\r\n\tconst [taskTitle, setTaskTitle] = useState(title);\r\n\tconst changeTaskDone = () => editTask(_id, {done: !done});\r\n\tconst changeTaskImportant = () => editTask(_id, {important: !important});\r\n\tconst submitTaskTitle = (props) => {\r\n        editTask(_id, {title: props[_id]});\r\n        setIsEditMode(!isEditMode);\r\n    };\r\n\r\n\tconst changeTitleTask = props => setTaskTitle(props[_id]);\r\n\r\n\treturn (\r\n\t\t<div className={ ClassNames(\"todos-task\", {done}) }>\r\n\t\t\t<CSSTransition in={ isEditMode } classNames=\"add-task\"\r\n\t\t\t\t\t\t   onEnter={ () => setIsShowButton(false) }\r\n\t\t\t\t\t\t   onExited={ () => setIsShowButton(true) }\r\n\t\t\t\t\t\t   mountOnEnter unmountOnExit timeout={ 500 }>\r\n\t\t\t\t<EditTaskTitleForm form={_id} onBlur={() => setIsEditMode(false)}\r\n\t\t\t\t\t\t\t\t   onChange={ changeTitleTask }\r\n\t\t\t\t\t\t\t\t   onSubmit={submitTaskTitle} initialValues={{[_id]: taskTitle}}/>\r\n\t\t\t</CSSTransition>\r\n            {isShowButton && <div className=\"todos-task-left-block\">\r\n                    <CheckboxCustom id={ _id } type=\"checkbox\" onChange={ changeTaskDone }\r\n                                    name=\"task\" checked={ done }\r\n                    />\r\n                    <span className={ ClassNames(\"task-title\", {important}, {done}) }>{ title }</span>\r\n                </div>\r\n            }\r\n\t\t\t<div className=\"icon-group\">\r\n\t\t\t\t{isShowButton && <Icon className={ClassNames(\"icon-pencil\", {\"active\": isEditMode}, {\"disabled\": isEditMode})}\r\n\t\t\t\t\t\t\t\t\t onClick={() => setIsEditMode(true)}/>}\r\n\t\t\t\t<Icon className={ ClassNames(\"icon-exclamation\", {\"active\": important}) }\r\n\t\t\t\t\t  onClick={ changeTaskImportant }/>\r\n\t\t\t\t<Icon className=\"icon-trash-o\" onClick={ () => removeTask(_id) }/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\n","import React from \"react\";\rimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\rimport { Task } from \"../Task\";\r\rimport './tasks.scss';\r\rconst Tasks = ( {tasks, funcs}) => {\r\r\treturn (\r\t\t<div className=\"todos-tasks\">\r\t\t\t<TransitionGroup>\r\t\t\t\t{\r\t\t\t\t\ttasks.map(task => <CSSTransition key={ task._id }\r\t\t\t\t\t\t\t\t\t\t\t\t\t timeout={ 200 }\r\t\t\t\t\t\t\t\t\t\t\t\t\t classNames=\"item\">\r\t\t\t\t\t\t<Task key={ task._id } { ...task }\r\t\t\t\t\t\t\t  editTask={ funcs.editTask }\r\t\t\t\t\t\t\t  handleFilters={ funcs.handleFilters }\r\t\t\t\t\t\t\t  removeTask={ funcs.removeTask }/>\r\t\t\t\t\t</CSSTransition>)\r\t\t\t\t}\r\t\t\t</TransitionGroup>\r\t\t\t{ tasks.length === 0 && <div className=\"todos-task task-empty\">Записи отсутствуют</div> }\r\t\t</div>\r\t)\r};\r\rexport default Tasks;","import React, { useState } from \"react\";\rimport Loader from '../Loader';\rimport { Search } from \"../Search\";\rimport { Filter } from \"../Filter\";\rimport { BackSideHeader } from \"../BackSideHeader\";\rimport Tasks from \"../Tasks\";\r\rimport './backSideCard.scss';\r\rexport const BackSideCard = ( {activeList, todoTitle, filter, funcs} ) => {\r\r\t//console.log(\"BackSideCard: \", activeList);\r\tconst [isActiveSearch, setIsActiveSearch] = useState(false);\r\r\tif (!activeList) return <Loader/>;\r\r\tconst onHandleFilters = ( filter ) => funcs.handleFilters(filter);\r\r\tconst getTasks = ( {tasks} ) => {\r\t\tswitch (filter) {\r\t\t\tcase \"active\":\r\t\t\t\treturn tasks.filter(tsk => !tsk.done);\r\t\t\tcase \"done\":\r\t\t\t\treturn tasks.filter(tsk => tsk.done);\r\t\t\tdefault:\r\t\t\t\treturn tasks;\r\t\t}\r\t};\r\r\tconst tasks = getTasks(activeList);\r\r\treturn (\r\t\t<div className=\"todos-back\">\r\t\t\t<BackSideHeader todoTitle={ todoTitle } todoId={ activeList._id }\r\t\t\t\t\t\t\tcreateTask={ funcs.createTask }\r\t\t\t\t\t\t\teditTodoList={ funcs.editTodoList }\r\t\t\t\t\t\t\tchangeActiveCardSide={ funcs.changeActiveCardSide }/>\r\t\t\t<div className=\"todos-back__main\">\r\t\t\t\t<div className=\"search-filter-block\">\r\t\t\t\t\t<Search setIsActiveSearch={ setIsActiveSearch }\r\t\t\t\t\t\t\ttodoId={ activeList._id } searchTasks={funcs.searchTasks}/>\r\t\t\t\t\t<Filter searchTasks={ funcs.searchTasks } className={ isActiveSearch }\r\t\t\t\t\t\t\tonHandleFilters={ onHandleFilters }\r\t\t\t\t\t\t\ttodoId={ activeList._id }/>\r\t\t\t\t</div>\r\t\t\t\t<Tasks tasks={ tasks } funcs={ funcs }/>\r\t\t\t</div>\r\t\t</div>\r\t)\r};","import React from \"react\";\rimport { connect } from 'react-redux';\rimport { BackSideCard } from \"../../components/BackSideCard\";\rimport { Actions } from \"../actions\";\rimport { getActiveList, getFilter, getTodoTitle } from \"../selectors\";\r\rconst BackSideCardContainer = ( {activeList, todoTitle, filter, ...funcs} ) => {\r\r\treturn <BackSideCard activeList={ activeList } todoTitle={ todoTitle }\r\t\t\t\t\t\t filter={ filter } funcs={ {...funcs} }/>\r};\r\rconst mapStateToProps = state => ({\r\tactiveList: getActiveList(state),\r\ttodoTitle: getTodoTitle(state),\r\tfilter: getFilter(state)\r});\r\rexport default connect(mapStateToProps, Actions)(BackSideCardContainer);","import React from \"react\";\rimport ClassNames from \"classnames\";\rimport Icon from \"../Icon\";\r\rexport const Chip = ({type, id, title, headerChip, removeChip}) => {\r\r\treturn (\r\t\t<div className={ClassNames(\"chip\", type)} >\r\t\t\t<Icon onClick={() => removeChip(id)} className=\"icon-close\"/>\r\t\t\t{headerChip && <h3>{headerChip}</h3>}\r\t\t\t<p>{title}</p>\r\t\t</div>\r\t)\r};","import {Chips} from \"./Chips\";\r\rexport default Chips;","import React  from \"react\";\rimport { CSSTransition, TransitionGroup } from 'react-transition-group';\rimport { Chip } from \"./Chip\";\r\rimport './chips.scss';\r\rexport const Chips = ( {chips, removeChip} ) => {\r\r\treturn (\r\t\t<TransitionGroup className=\"container-chips\" >\r\t\t\t{ chips.map(chip => <CSSTransition key={ chip.id } timeout={ 500 } classNames=\"chip\" >\r\t\t\t\t<Chip removeChip={ removeChip } { ...chip }/>\r\t\t\t</CSSTransition>) }\r\t\t</TransitionGroup>\r\t)\r};","import React from \"react\";\rimport FrontSideCardContainer from '../../modules/FrontSideCard/container';\rimport BackSideCardContainer from '../../modules/BackSideCard/container';\rimport classNames from 'classnames';\rimport Chips from \"../Chips\";\r\rexport const App = ( {isActiveCardSide, chips, removeChip} ) => {\r\r\treturn (\r\t\t<>\r\t\t\t<Chips chips={ chips } removeChip={ removeChip }/>\r\t\t\t<div className=\"todos\">\r\t\t\t\t<div className={ classNames(\"todos_wrap\", {'active-back': isActiveCardSide}) }>\r\t\t\t\t\t<FrontSideCardContainer/>\r\t\t\t\t\t<BackSideCardContainer/>\r\t\t\t\t</div>\r\t\t\t</div>\r\t\t</>\r\t)\r};","import {\r\tADD_TASK,\r\tADD_TODO_LIST, CHANGE_ACTIVE_CARD_SIDE, EDIT_TASK,\r\tEDIT_TODO_LIST, FILTER,\r\tGET_TASKS,\r\tREMOVE_CHIP, REMOVE_TASK,\r\tREMOVE_TODO_LIST, SEARCH,\r\tSET_CHIP,\r\tSET_TODO_LISTS\r} from \"./types\";\r\rlet initialState = {\r\ttodoLists: null,\r\tactiveList: null,\r\tisActiveCardSide: false,\r\ttodoTitle: '',\r\tfilter: 'all',\r\tchips: []\r};\r\rexport default (state = initialState, action) => {\r\tconst {\r\t\ttype, todoLists, todoId,\r\t\ttodoList, todoTitle, isActiveCardSide,\r\t\tnewTask, taskId, editTaskData, searchString, filter,\r\t\tchip, chipId\r\t} = action;\r\r\r\tswitch(type) {\r\t\tcase SET_CHIP: return {...state, chips: [...state.chips, chip] };\r\t\tcase REMOVE_CHIP: return {...state, chips: state.chips.filter(chip => chip.id !== chipId) };\r\t\tcase SET_TODO_LISTS: return {...state, todoLists };\r\t\tcase ADD_TODO_LIST: return {...state, todoLists: [...state.todoLists, todoList]};\r\t\tcase EDIT_TODO_LIST: return {...state,\r\t\t\ttodoLists: state.todoLists.map(td => {\r\t\t\t\tif(td._id === todoList._id) td.title = todoList.title;\r\t\t\t\treturn td;\r\t\t\t}),\r\t\t\tactiveList: state.todoLists.filter(td => td._id === todoList._id)[0],\r\t\t\ttodoTitle: todoList.title\r\t\t};\r\t\tcase REMOVE_TODO_LIST: return {\r\t\t\t...state,\r\t\t\ttodoLists: state.todoLists.filter(tds => tds._id !== todoId)\r\t\t};\r\t\tcase GET_TASKS: return {\r\t\t\t...state,\r\t\t\tactiveList: state.todoLists.filter(td => td._id === todoId)[0],\r\t\t\tisActiveCardSide: !state.isActiveCardSide,\r\t\t\ttodoTitle: todoTitle\r\t\t};\r\t\tcase CHANGE_ACTIVE_CARD_SIDE: return {...state, isActiveCardSide};\r\t\tcase ADD_TASK: return {\r\t\t\t...state,\r\t\t\ttodoLists: state.todoLists.map(tdl =>\r\t\t\t\tnewTask.todoId === tdl._id ? {...tdl, tasks: [...tdl.tasks, newTask]} : tdl),\r\t\t\tactiveList: {...state.activeList, tasks: [...state.activeList.tasks, newTask]}\r\t\t};\r\t\tcase REMOVE_TASK: return {\r\t\t\t...state,\r\t\t\ttodoLists: state.todoLists.map(tdl => ({...tdl,\r\t\t\t\ttasks: tdl.tasks.filter(tsk => tsk._id !== taskId)})),\r\t\t\tactiveList: {...state.activeList,\r\t\t\t\ttasks: state.activeList.tasks.filter(tsk => tsk._id !== taskId)}\r\t\t};\r\t\tcase EDIT_TASK:return {\r\t\t\t...state,\r\t\t\ttodoLists: state.todoLists.map(tdl => {\r\t\t\t\treturn {...tdl, tasks: tdl.tasks.map(tsk => {\r\t\t\t\t\t\tif(tsk._id === taskId) return {...tsk, ...editTaskData};\r\t\t\t\t\t\treturn tsk;\r\t\t\t\t\t})};\r\t\t\t}),\r\t\t\tactiveList: {...state.activeList, tasks: state.activeList.tasks.map(tsk => {\r\t\t\t\t\tif(tsk._id === taskId) return {...tsk, ...editTaskData};\r\t\t\t\t\treturn tsk;\r\t\t\t\t})}\r\t\t};\r\t\tcase SEARCH: {\r\t\t\tlet todoActive = state.todoLists.filter(tdl =>  tdl._id === todoId)[0];\r\r\t\t\tif(searchString) todoActive = {\r\t\t\t\t...todoActive,\r\t\t\t\ttasks: todoActive.tasks.filter(tsk =>\r\t\t\t\t\ttsk.title.toLowerCase().indexOf(searchString.toLowerCase()) > -1)\r\t\t\t};\r\r\t\t\treturn { ...state, activeList: todoActive };\r\t\t}\r\t\tcase FILTER: return {...state, filter };\r\t\tdefault: return state;\r\t}\r};","import { combineReducers } from \"redux\";\rimport todo from './frontend/modules/reducer';\rimport { reducer as formReducer } from 'redux-form';\r\rexport default combineReducers({\r\ttodo,\r\tform: formReducer\r});","import { applyMiddleware, compose, createStore } from \"redux\";\rimport thunk from 'redux-thunk';\rimport reducers from \"./reducers\";\r\rconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\rconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\rexport default createStore(reducers, enhancer);","import React from \"react\";\rimport { connect, Provider } from 'react-redux';\rimport {App} from '../../components/App';\rimport {Actions} from \"../actions\";\rimport { getChips, getIsActiveCardSide } from \"../selectors\";\rimport store from \"../../../store\";\r\rlet AppContainer = props => <App {...props}/>;\r\rconst mapStateToProps = state => ({\r\tisActiveCardSide: getIsActiveCardSide(state),\r\tchips: getChips(state)\r});\r\rAppContainer = connect(mapStateToProps, Actions)(AppContainer);\r\rexport default () => <Provider store={store}>\r\t<AppContainer />\r</Provider>\r","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './frontend/modules/App/container';\n\nimport './frontend/assets/styles/icomoon.css';\nimport './index.scss';\n\nReactDOM.render( <AppContainer />, document.getElementById('root'));"],"sourceRoot":""}